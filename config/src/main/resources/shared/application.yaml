spring:
  cache:
    type: redis
    prefix: ${spring.application.name}
    expirations:
      users: 60

  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            authorization-uri: ${app.keycloak.serverUrl}/realms/${app.keycloak.realm}/protocol/openid-connect/authorize
            token-uri: ${app.keycloak.serverUrl}/realms/${app.keycloak.realm}/protocol/openid-connect/token
      resourceserver:
        jwt:
          issuer-uri: ${app.keycloak.serverUrl}/realms/${app.keycloak.realm}

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://service-discovery:8761/eureka/

app:
  keycloak:
    serverUrl: http://keycloak:8080/auth
    realm: bloggingnetwork