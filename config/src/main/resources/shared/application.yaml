spring:
  main:
    banner-mode: off
  cache:
    type: redis
    prefix: ${spring.application.name}

  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false

  redis:
    host: redis
    port: 6379

  rabbitmq:
    host: rabbitmq
    port: 5672

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            authorization-uri: ${app.keycloak.serverUrl}/realms/${app.keycloak.realm}/protocol/openid-connect/authorize
            token-uri: ${app.keycloak.serverUrl}/realms/${app.keycloak.realm}/protocol/openid-connect/token
      resourceserver:
        jwt:
          issuer-uri: ${app.keycloak.serverUrl}/realms/${app.keycloak.realm}

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://service-discovery:8761/eureka/

feign:
  circuitbreaker:
    enabled: true

app:
  keycloak:
    serverUrl: http://keycloak:8080/auth
    realm: bloggingnetwork

logging:
  level:
    com.mikhailkarpov: DEBUG
