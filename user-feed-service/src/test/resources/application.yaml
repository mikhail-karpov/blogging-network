spring:
  cloud:
    config:
      enabled: false
    function:
      definition: followingEventConsumer;postEventConsumer
    stream:
      bindings:
        followingEventConsumer-in-0:
          destination: users.following
          group: feed
        postEventConsumer-in-0:
          destination: posts
          group: feed
      rabbit:
        bindings:
          followingEventConsumer-in-0:
            consumer:
              bindingRoutingKey: FOLLOWED,UNFOLLOWED
              bindingRoutingKeyDelimiter: ','
          postEventConsumer-in-0:
            consumer:
              bindingRoutingKey: CREATED,DELETED
              bindingRoutingKeyDelimiter: ','
        binder:
          connection-name-prefix: ${spring.application.name}
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: user-feed-service
            client-secret: b1ddf50a-b599-4345-947a-9e3591001bb6
            authorization-grant-type: client_credentials
            scope: profile

        provider:
          keycloak:
            authorization-uri: ${keycloak.serverUrl}/realms/${keycloak.realm}/protocol/openid-connect/authorize
            token-uri: ${keycloak.serverUrl}/realms/${keycloak.realm}/protocol/openid-connect/token

      resourceserver:
        jwt:
          issuer-uri: ${keycloak.serverUrl}/realms/${keycloak.realm}

eureka:
  client:
    enabled: false

keycloak:
  serverUrl: http://keycloak/auth
  realm: userfeed

feign:
  circuitbreaker:
    enabled: true

logging:
  level:
    com.mikhailkarpov.bloggingnetwork.feed.client.PostServiceClient: DEBUG